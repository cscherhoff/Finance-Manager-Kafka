{
	"info": {
		"_postman_id": "4824a51c-2e1c-4ef4-b6a1-2d58f0c46459",
		"name": "Finance App MS KAFKA Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User registration and authentification",
			"item": [
				{
					"name": "Register new user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"cedricTest\", \"password\":\"ichbineinpw%\", \"role\":\"ROLE_ADMIN\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{userServicePort}}/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{userServicePort}}",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentifiaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"\r",
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"cedricTest\", \"password\":\"ichbineinpw%\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{userServicePort}}/authenticate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{userServicePort}}",
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Allocation",
			"item": [
				{
					"name": "Get initial income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('0');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/income/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"income",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update income to 1156.76",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1156.76",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/income/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"income",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get income after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('1156.76');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/income/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"income",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get initial allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    userId = pm.collectionVariables.get(\"userId\");\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('{\"userId\":'+userId+',\"investment\":0,\"fixCosts\":[],\"categories\":[]}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"userId\":123,\"investment\":200.00,\"fixCosts\":[{\"fixCostName\":\"Miete\",\"amount\":540.27},{\"fixCostName\":\"Verein\",\"amount\":15.77}],\"categories\":[{\"categoryName\":\"Haushalt\",\"budget\":301.47},{\"categoryName\":\"Reisen\",\"budget\":99.25}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get categories after allocation update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"name\":\"Haushalt\",\"budget\":301.47,\"currentBudget\":301.47},{\"name\":\"Reisen\",\"budget\":99.25,\"currentBudget\":99.25}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{expensePort}}/categories/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{expensePort}}",
							"path": [
								"categories",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get allocation after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    userId = pm.collectionVariables.get(\"userId\");\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('{\"userId\":'+userId+',\"investment\":200.00,\"fixCosts\":[{\"fixCostName\":\"Miete\",\"amount\":540.27},{\"fixCostName\":\"Verein\",\"amount\":15.77}],\"categories\":[{\"categoryName\":\"Haushalt\",\"budget\":301.47},{\"categoryName\":\"Reisen\",\"budget\":99.25}]}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Try to upload invalid allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.message).to.eql('The sum of the values for investments, fix costs and categories must equal the income.The value of the sum is 6257.48, but the income is 1156.76');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"userId\":123,\"investment\":400.00,\"fixCosts\":[{\"fixCostName\":\"Miete\",\"amount\":740.99},{\"fixCostName\":\"Verein\",\"amount\":15.77}],\"categories\":[{\"categoryName\":\"Haushalt\",\"budget\":5001.47},{\"categoryName\":\"Reisen\",\"budget\":99.25}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Try to upload negative category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.message).to.eql('The value of the category \\'Reisen\\' must be over zero, but is -99.25');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"userId\":123,\"investment\":400.00,\"fixCosts\":[{\"fixCostName\":\"Miete\",\"amount\":740.99},{\"fixCostName\":\"Verein\",\"amount\":15.77}],\"categories\":[{\"categoryName\":\"Haushalt\",\"budget\":5001.47},{\"categoryName\":\"Reisen\",\"budget\":-99.25}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Try to upload negative fix cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.message).to.eql('The value of the fix cost \\'Verein\\' must be over zero, but is -15.77');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"userId\":123,\"investment\":400.00,\"fixCosts\":[{\"fixCostName\":\"Miete\",\"amount\":740.99},{\"fixCostName\":\"Verein\",\"amount\":-15.77}],\"categories\":[{\"categoryName\":\"Haushalt\",\"budget\":5001.47},{\"categoryName\":\"Reisen\",\"budget\":99.25}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Expenses",
			"item": [
				{
					"name": "Post expense with overriding  the defaults",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('[{\"date\":\"2021-05-22\",\"article\":\"Batterien\",\"category\":\"Haushalt\",\"amount\":12.34,\"price\":11.11,\"overrideDefaults\":true}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\"date\":\"2021-05-22\",\"article\":\"Batterien\",\"category\":\"Haushalt\",\"amount\":12.34,\"price\":11.11,\"overrideDefaults\":true}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{expensePort}}/expense/user/{{userId}}/accountName/{{girokontoName}}?overrideDefault=true",
							"host": [
								"{{host}}"
							],
							"port": "{{expensePort}}",
							"path": [
								"expense",
								"user",
								"{{userId}}",
								"accountName",
								"{{girokontoName}}"
							],
							"query": [
								{
									"key": "overrideDefault",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post expense without overriding  the defaults",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('[{\"date\":\"2021-05-22\",\"article\":\"Batterien\",\"category\":\"Haushalt\",\"amount\":12.34,\"price\":21.41,\"overrideDefaults\":false}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\"date\":\"2021-05-22\",\"article\":\"Batterien\",\"category\":\"Haushalt\",\"amount\":12.34,\"price\":21.41,\"overrideDefaults\":false}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{expensePort}}/expense/user/{{userId}}/accountName/{{girokontoName}}?overrideDefault=false",
							"host": [
								"{{host}}"
							],
							"port": "{{expensePort}}",
							"path": [
								"expense",
								"user",
								"{{userId}}",
								"accountName",
								"{{girokontoName}}"
							],
							"query": [
								{
									"key": "overrideDefault",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"date\":\"2021-05-22\",\"article\":\"Batterien\",\"category\":\"Haushalt\",\"amount\":12.34,\"price\":11.11},{\"date\":\"2021-05-22\",\"article\":\"Batterien\",\"category\":\"Haushalt\",\"amount\":12.34,\"price\":21.41}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{expensePort}}/expense/user/{{userId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{expensePort}}",
							"path": [
								"expense",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Investments",
			"item": [
				{
					"name": "Get all depot entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Buy 10 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"degiro\",\"type\":\"Buy\",\"securityName\":\"bmw\",\"number\":10,\"price\":22.45,\"expenses\":1,\"totalPrice\":225.5}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Buy\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":22.45,\r\n   \"number\":10,\r\n   \"expenses\":1,\r\n   \"totalPrice\":225.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":10.00,\"singlePrice\":22.45,\"dividend\":0.00,\"costs\":1.00}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Buy 15 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-28\",\"depotName\":\"degiro\",\"type\":\"Buy\",\"securityName\":\"bmw\",\"number\":15,\"price\":14.67,\"expenses\":1,\"totalPrice\":221.05}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-28\",\r\n   \"type\":\"Buy\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":14.67,\r\n   \"number\":15,\r\n   \"amount\":220.05,\r\n   \"expenses\":1,\r\n   \"totalPrice\":221.05\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":25.00,\"singlePrice\":17.78,\"dividend\":0.00,\"costs\":2.00}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Buy 20 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-28\",\"depotName\":\"degiro\",\"type\":\"Buy\",\"securityName\":\"bmw\",\"number\":20,\"price\":15.83,\"expenses\":1,\"totalPrice\":317.6}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-28\",\r\n   \"type\":\"Buy\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":15.83,\r\n   \"number\":20,\r\n   \"amount\":316.6,\r\n   \"expenses\":1,\r\n   \"totalPrice\":317.6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":45.00,\"singlePrice\":16.91,\"dividend\":0.00,\"costs\":3.00}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Buy 12 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-28\",\"depotName\":\"degiro\",\"type\":\"Buy\",\"securityName\":\"bmw\",\"number\":12,\"price\":16.79,\"expenses\":1,\"totalPrice\":202.48}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-28\",\r\n   \"type\":\"Buy\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":16.79,\r\n   \"number\":12,\r\n   \"amount\":201.48,\r\n   \"expenses\":1,\r\n   \"totalPrice\":202.48\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":57.00,\"singlePrice\":16.88,\"dividend\":0.00,\"costs\":4.00}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Buy 8 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-28\",\"depotName\":\"degiro\",\"type\":\"Buy\",\"securityName\":\"bmw\",\"number\":8,\"price\":11.65,\"expenses\":1,\"totalPrice\":94.2}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-28\",\r\n   \"type\":\"Buy\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":11.65,\r\n   \"number\":8,\r\n   \"amount\":93.2,\r\n   \"expenses\":1,\r\n   \"totalPrice\":94.2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":65.00,\"singlePrice\":16.24,\"dividend\":0.00,\"costs\":5.00}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"profit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sell 3 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"degiro\",\"type\":\"Sell\",\"securityName\":\"bmw\",\"number\":3,\"price\":24.67,\"expenses\":1,\"totalPrice\":73.01}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Sell\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":24.67,\r\n   \"number\":3,\r\n   \"amount\":74.01,\r\n   \"expenses\":1,\r\n   \"totalPrice\":73.01\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":62.00,\"singlePrice\":16.24,\"dividend\":0.00,\"costs\":4.77}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"bmw\",\"netAbsoluteProfit\":25.29,\"grossAbsoluteProfit\":24.06,\"netPercentageProfit\":0.52,\"grossPercentageProfit\":0.49}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"profit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sell 12 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"degiro\",\"type\":\"Sell\",\"securityName\":\"bmw\",\"number\":12,\"price\":25.82,\"expenses\":1,\"totalPrice\":308.84}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Sell\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":25.82,\r\n   \"number\":12,\r\n   \"amount\":309.84,\r\n   \"expenses\":1,\r\n   \"totalPrice\":308.84\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":50.00,\"singlePrice\":16.24,\"dividend\":0.00,\"costs\":3.85}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"bmw\",\"netAbsoluteProfit\":140.25,\"grossAbsoluteProfit\":137.10,\"netPercentageProfit\":0.58,\"grossPercentageProfit\":0.56}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"profit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sell 36 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"degiro\",\"type\":\"Sell\",\"securityName\":\"bmw\",\"number\":36,\"price\":26.07,\"expenses\":1,\"totalPrice\":937.52}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Sell\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":26.07,\r\n   \"number\":36,\r\n   \"amount\":938.52,\r\n   \"expenses\":1,\r\n   \"totalPrice\":937.52\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"degiro\",\"securityName\":\"bmw\",\"number\":14.00,\"singlePrice\":16.24,\"dividend\":0.00,\"costs\":1.08}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"bmw\",\"netAbsoluteProfit\":494.13,\"grossAbsoluteProfit\":487.21,\"netPercentageProfit\":0.60,\"grossPercentageProfit\":0.59}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"profit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sell 14 bmw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"degiro\",\"type\":\"Sell\",\"securityName\":\"bmw\",\"number\":14,\"price\":27.95,\"expenses\":1,\"totalPrice\":390.3}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Sell\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":27.95,\r\n   \"number\":14,\r\n   \"amount\":391.3,\r\n   \"expenses\":1,\r\n   \"totalPrice\":390.3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries 10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/{{pathDepotEntry}}/{{depotName}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"{{pathDepotEntry}}",
								"{{depotName}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"bmw\",\"netAbsoluteProfit\":658.07,\"grossAbsoluteProfit\":649.07,\"netPercentageProfit\":0.63,\"grossPercentageProfit\":0.62}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInv}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInv}}",
								"profit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User registration and authentification 2",
			"item": [
				{
					"name": "Register new user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"cedricTest2\", \"password\":\"ichbineinpw%\", \"role\":\"ROLE_ADMIN\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{userServicePort}}/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{userServicePort}}",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentifiaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"\r",
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"cedricTest2\", \"password\":\"ichbineinpw%\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{userServicePort}}/authenticate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{userServicePort}}",
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Investment-Dividend",
			"item": [
				{
					"name": "Buy 10 sixt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"flatex\",\"type\":\"Buy\",\"securityName\":\"sixt\",\"number\":10,\"price\":10.48,\"expenses\":1,\"totalPrice\":105.8}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"flatex\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Buy\",\r\n   \"securityName\":\"sixt\",\r\n   \"price\":10.48,\r\n   \"number\":10,\r\n   \"expenses\":1,\r\n   \"totalPrice\":105.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dividend sixt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"flatex\",\"type\":\"Dividend\",\"securityName\":\"sixt\",\"number\":10,\"price\":888888.88,\"expenses\":0,\"totalPrice\":2}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"flatex\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Dividend\",\r\n   \"securityName\":\"sixt\",\r\n   \"price\":888888.88,\r\n   \"number\":10,\r\n   \"amount\":111111.11,\r\n   \"expenses\":0,\r\n   \"totalPrice\":2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries after dividend",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"flatex\",\"securityName\":\"sixt\",\"number\":10.00,\"singlePrice\":10.48,\"dividend\":0.00,\"costs\":1.00}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"transactionId\":1,\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Kauf\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":28.45,\r\n   \"number\":15,\r\n   \"amount\":426.75,\r\n   \"expenses\":1,\r\n   \"totalAmount\":427.75\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/{{pathDepotEntry}}/{{depotNameDividend}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"{{pathDepotEntry}}",
								"{{depotNameDividend}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits after dividend",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"sixt\",\"netAbsoluteProfit\":2.00,\"grossAbsoluteProfit\":1.00,\"netPercentageProfit\":0.02,\"grossPercentageProfit\":0.01}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"profit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sell 7 sixt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"flatex\",\"type\":\"Sell\",\"securityName\":\"sixt\",\"number\":7,\"price\":20.48,\"expenses\":1,\"totalPrice\":144.36}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"flatex\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Sell\",\r\n   \"securityName\":\"sixt\",\r\n   \"price\":20.48,\r\n   \"number\":7,\r\n   \"expenses\":1,\r\n   \"totalPrice\":144.36\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries after dividend 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"depotName\":\"flatex\",\"securityName\":\"sixt\",\"number\":3.00,\"singlePrice\":10.48,\"dividend\":0.00,\"costs\":0.30}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"transactionId\":1,\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Kauf\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":28.45,\r\n   \"number\":15,\r\n   \"amount\":426.75,\r\n   \"expenses\":1,\r\n   \"totalAmount\":427.75\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/{{pathDepotEntry}}/{{depotNameDividend}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"{{pathDepotEntry}}",
								"{{depotNameDividend}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits after dividend 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"sixt\",\"netAbsoluteProfit\":72.00,\"grossAbsoluteProfit\":69.30,\"netPercentageProfit\":0.42,\"grossPercentageProfit\":0.40}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"profit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sell 3 sixt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.body('{\"date\":\"2021-05-24\",\"depotName\":\"flatex\",\"type\":\"Sell\",\"securityName\":\"sixt\",\"number\":3,\"price\":20.48,\"expenses\":1,\"totalPrice\":62.44}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"depotName\":\"flatex\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Sell\",\r\n   \"securityName\":\"sixt\",\r\n   \"price\":20.48,\r\n   \"number\":3,\r\n   \"expenses\":1,\r\n   \"totalPrice\":62.44\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/transaction",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all depot entries after dividend 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"transactionId\":1,\r\n   \"userId\":131990,\r\n   \"depotName\":\"degiro\",\r\n   \"date\":\"2021-05-24\",\r\n   \"type\":\"Kauf\",\r\n   \"securityName\":\"bmw\",\r\n   \"price\":28.45,\r\n   \"number\":15,\r\n   \"amount\":426.75,\r\n   \"expenses\":1,\r\n   \"totalAmount\":427.75\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/{{pathDepotEntry}}/{{depotNameDividend}}",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"{{pathDepotEntry}}",
								"{{depotNameDividend}}"
							]
						},
						"description": "Get all depot entries after posting the second transaction"
					},
					"response": []
				},
				{
					"name": "Get all profits after dividend 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('[{\"securityName\":\"sixt\",\"netAbsoluteProfit\":102.00,\"grossAbsoluteProfit\":98.00,\"netPercentageProfit\":0.50,\"grossPercentageProfit\":0.48}]');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{investmentPort}}/investments/user/{{userIdInveDivi}}/profit",
							"host": [
								"{{host}}"
							],
							"port": "{{investmentPort}}",
							"path": [
								"investments",
								"user",
								"{{userIdInveDivi}}",
								"profit"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "expensePort",
			"value": "8068"
		},
		{
			"key": "investmentPort",
			"value": "8068"
		},
		{
			"key": "accountPort",
			"value": "8068"
		},
		{
			"key": "host",
			"value": "http://localhost"
		},
		{
			"key": "girokontoName",
			"value": "girokonto"
		},
		{
			"key": "depotName",
			"value": "degiro"
		},
		{
			"key": "kontoName",
			"value": "Konto"
		},
		{
			"key": "depotNameDividend",
			"value": "flatex"
		},
		{
			"key": "pathDepotEntry",
			"value": "depotEntries"
		},
		{
			"key": "allocationPort",
			"value": "8068",
			"type": "default"
		},
		{
			"key": "userServicePort",
			"value": "8068",
			"type": "default"
		},
		{
			"key": "userId",
			"value": "1"
		},
		{
			"key": "userIdInv",
			"value": "1"
		},
		{
			"key": "userIdInveDivi",
			"value": "2"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}