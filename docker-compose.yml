version: '3'

services:
  database-service:
    restart: always
    image: mysql
    ports:
      - 6033:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: Test12345
      MYSQL_DATABASE: finance_kafka_test
#    volumes:
#      - dbdata:/var/lib/mysql
  allocator-service:
    restart: on-failure
    build: .\allocator-service-ms
    ports:
      - 8085:8085
    container_name: allocator-service
    environment:
      spring.datasource.url: jdbc:mysql://database-service:3306/finance_kafka_test?characterEncoding=utf8&serverTimezone=CET&createDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password: root
  expense-service:
    restart: on-failure
    build: .\expense-manager-ms
    ports:
      - 8083:8083
    container_name: expense-service
    environment:
      spring.datasource.url: jdbc:mysql://database-service:3306/finance_kafka_test?characterEncoding=utf8&serverTimezone=CET&createDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password: root
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "allocation:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#volumes:
#  dbdata:
